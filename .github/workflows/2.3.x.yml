---
name: 2.3.x

on:
  pull_request:
  push:
    branches:
      - master
      - main
  schedule:
    - cron: "0 2 * * 0"

defaults:
  run:
    working-directory: 'ansible-loki'

jobs:

  arch:
    name: "${{ matrix.image }} / python: ${{ matrix.python-version }}, ansible: ${{ matrix.ansible-version }}"
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - archlinux:latest
        python-version:
          - '3.9'
        ansible-version:
          - '4.1.0'
          - '5.1.0'

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'ansible-loki'

      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          tox -e py$(printf "${{ matrix.python-version }}" | tr -d '.')-ansible$(printf "${{ matrix.ansible-version }}" | tr -d '.') \
            -- molecule test --scenario-name 2.3
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  deb:
    name: "${{ matrix.image }} / python: ${{ matrix.python-version }}, ansible: ${{ matrix.ansible-version }}"
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - debian:10
          - debian:11
          - ubuntu:20.04
        python-version:
          - '3.9'
        ansible-version:
          - '4.1.0'
          - '5.1.0'

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'ansible-loki'

      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          tox -e py$(printf "${{ matrix.python-version }}" | tr -d '.')-ansible$(printf "${{ matrix.ansible-version }}" | tr -d '.') \
            -- molecule test --scenario-name 2.3
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  rpm:
    name: "${{ matrix.image }} / python: ${{ matrix.python-version }}, ansible: ${{ matrix.ansible-version }}"
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        image:
          # - centos:8
          - oraclelinux:8
          - rockylinux:8
          - almalinux:8
        python-version:
          - '3.9'
        ansible-version:
          - '4.1.0'
          - '5.1.0'

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'ansible-loki'

      - name: set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          tox -e py$(printf "${{ matrix.python-version }}" | tr -d '.')-ansible$(printf "${{ matrix.ansible-version }}" | tr -d '.') \
            -- molecule test --scenario-name 2.3
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

